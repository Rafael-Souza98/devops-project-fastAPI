# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Deploy Render

on:
  push:
    branches: [ "main", "dev" ]

permissions:
  contents: read
  packages: write
  id-token: write
  security-events: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          echo "Installing requirements..."
          pip install -r requirements.txt
          pip install pytest mongomock

      - name: Install and run Black
        run: |
            pip install black
            black .

      - name: Run tests
        run: make test

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=sha

    - name: Build Docker image
      id: docker_build
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false  # NÃ£o empurra a imagem para o DockerHub
        tags: my-image:${{ steps.meta.outputs.sha }}

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ github.repository }}:${{ steps.meta.outputs.sha }}
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: 'trivy-results.sarif'

  deploy:
      needs: test
      runs-on: ubuntu-latest
      environment:
        name: production
      steps:
        - name: Deploy to Render
          if: github.ref == 'refs/heads/main'
          env:
            DEPLOY_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
          run: |
            echo "Deploy URL: $DEPLOY_URL"
            curl "$DEPLOY_URL"

